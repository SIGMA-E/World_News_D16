"""
Django settings for News project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv, find_dotenv

load_dotenv(find_dotenv())

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-d3q7via90lap+q($7aoc129m_74#1pgr5e^)c6m8sf*=e=0%rh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'news_portal',
    'django_filters',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'sign_app',
    'django_apscheduler'
]
# подгружено из .env
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_USER_EMAIL')

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'optional'

EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = '465'
# подгружено из .env
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_USER_PASSWORD')
EMAIL_USE_SSL = True

# настройки для отправки логов на почту админу
ADMINS = [
    (os.getenv('USER_NAME'), os.getenv('MY_ADMIN_EMAIL'))
]
SERVER_EMAIL = os.getenv('DEFAULT_USER_EMAIL')
# -----------------------------------------------
SITE_ID = 1
LOGIN_URL = '/'
LOGIN_REDIRECT_URL = '/news/'

ACCOUNT_FORMS = {'signup': 'news_portal.forms.BasicSignupForm'}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'
]

ROOT_URLCONF = 'News.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

WSGI_APPLICATION = 'News.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [BASE_DIR/'web_style/static']

# настройки для Celery
CELERY_BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# кэширование файлов
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache_files')
    }
}

# Логирование
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose_debug': {  # формат вывода в консоль для уровня DEBUG и выше (задание 16.4 п.1)
            'format': '"Time": "%(asctime)s", '
                      '"Level": "%(levelname)s", '
                      '"Message": "%(message)s"',
            'style': '%'
        },
        'verbose_warning': {  # формат вывода в консоль для уровня WARNING и выше (задание 16.4 п.1)
            'format': '"Time": "%(asctime)s", '
                      '"Level": "%(levelname)s", '
                      '"Message": "%(message)s", '
                      '"Path": "%(pathname)s"',
            'style': '%'
        },
        'verbose_error': {  # формат вывода в консоль для уровня ERROR и выше (задание 16.4 п.1)
                            # формат вывода в файл errors.log уровня ERROR и выше (задание 16.4 п.3)
            'format': '"Time": "%(asctime)s", '
                      '"Level": "%(levelname)s", '
                      '"Message": "%(message)s", '
                      '"Path": "%(pathname)s", '
                      '"Stack": "%(exc_info)s"'
        },
        'verbose_info_to_file_general': {  # формат вывода в файл general.log для уровня INFO и выше (задание 16.4 п.2)
                                           # формат вывода в файл security.log для уровня INFO и выше (задание 16.4 п.4)
            'format': '"Time": "%(asctime)s", '
                      '"Level": "%(levelname)s", '
                      '"Module": "%(module)s", '
                      '"Message": "%(message)s"'
        }
    },
    'filters': {  # фильтр для DEBUG = True/False
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue'
        },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'debug_to_console': {  # обработчик вывода в консоль для уровня DEBUG и выше (задание 16.4 п.1)
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'verbose_debug'
        },
        'warning_to_console': {  # обработчик вывода в консоль для уровня WARNING и выше (задание 16.4 п.1)
            'level': 'WARNING',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'verbose_warning'
        },
        'error_to_console': {  # обработчик вывода в консоль для уровня ERROR и выше (задание 16.4 п.1)
            'level': 'ERROR',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'verbose_error'
        },
        'info_to_file_general': {  # обработчик вывода в файл general.log для уровня INFO и выше (задание 16.4 п.2)
            'level': 'INFO',
            'filters': ['require_debug_false'],  # подготовка логов для записи в general.log если DEBUG = False
            'class': 'logging.FileHandler',
            'formatter': 'verbose_info_to_file_general',
            'filename': 'logs_files/general.log'
        },
        'error_to_file_errors': {  # обработчик вывода в файл errors.log для уровня ERROR и выше (задание 16.4 п.3)
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'formatter': 'verbose_error',  # подошел тот же formatter, что и для вывода в консоль
            'filename': 'logs_files/errors.log'
        },
        'info_to_file_security': {  # обработчик вывода в файл security.log для уровня INFO и выше (задание 16.4 п.4)
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'formatter': 'verbose_info_to_file_general',  # подошел тот же formatter, что и для вывода в general.log
            'filename': 'logs_files/security.log'
        },
        'mail_admins': {  # обработчик отправки логов на почту админу
            'level': 'ERROR',
            'filters': ['require_debug_false'],  # подготовка отправки логов на почту админу если DEBUG = False
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'verbose_error'
        }
    },
    'loggers': {
        'django': {  # регистратор логов (задание 16.4 п.1, 2)
            'handlers': ['debug_to_console', 'warning_to_console', 'error_to_console', 'info_to_file_general'],
            'level': 'DEBUG',  # TODO изменить на DEBUG
            'propagate': True
        },
        'django.request': {  # регистратор логов (задание 16.4 п.3, 5)
            'handlers': ['error_to_file_errors', 'mail_admins'],  # отправляем логи на почту админу DEBUG = False
            'level': 'ERROR',
            'propagate': True
        },
        'django.server': {  # регистратор логов (задание 16.4 п.3, 5)
            'handlers': ['error_to_file_errors', 'mail_admins'],  # отправляем логи на почту админу DEBUG = False
            'level': 'ERROR',
            'propagate': True
        },
        'django.template': {  # регистратор логов (задание 16.4 п.3)
            'handlers': ['error_to_file_errors'],
            'level': 'ERROR',
            'propagate': True
        },
        'django.db.backends': {  # регистратор логов (задание 16.4 п.3)
            'handlers': ['error_to_file_errors'],
            'level': 'ERROR',
            'propagate': True
        },
        'django.security': {   # регистратор логов (задание 16.4 п.4)
            'handlers': ['info_to_file_security'],
            'level': 'INFO',
            'propagate': True
        }
    }
}
